import os
from glob import glob

config = {
    "apptainer_bind": "/agr/scratch,/agr/persist",
    "apptainer_image": "/agr/persist/projects/2024_apsim_improvements/apsim-simulations/container/apsim-2024.09.7579.0.aimg",
    "excluded_txt_files": ["ExampleConfig.txt"],
    "max_consecutive_failures": 3,
    "slurm_logdir": "slurmlogs"
}

txt_files = [f for f in glob("*.txt") if f not in config["excluded_txt_files"]]

rule all:
    input:
        config["slurm_logdir"],
        "txt_files_processed"

rule process_txt_files:
    input:
        txt_files = txt_files
    output:
        "txt_files_processed"
    params:
        logfile = lambda wildcards, output: f"{config['slurm_logdir']}/txt_files_%j.out",
        processed_files_log = "processed_txt_files.log",
        failed_files_log = "failed_txt_files.log"
    resources:
        mem_mb = 8000,
        time = "16:00:00"
    threads: 4
    shell:
        """
        #SBATCH --output={params.logfile}

        module load Apptainer
        export APPTAINER_BIND="{config[apptainer_bind]}"
        export APPTAINER_CMD="apptainer exec {config[apptainer_image]}"
        
        mkdir -p FAILED_CONFIG
        rm -f {params.processed_files_log} {params.failed_files_log}
        touch {params.processed_files_log} {params.failed_files_log}
        
        total_files=$(echo "{input.txt_files}" | wc -w)
        processed_files=0
        failed_files=0
        max_consecutive_failures={config[max_consecutive_failures]}
        consecutive_failures=0
        
        for file in {input.txt_files}; do
            echo "Processing $file"
            
            if $APPTAINER_CMD Models --cpu-count {threads} --apply "$file"; then
                echo "$file" >> {params.processed_files_log}
                processed_files=$((processed_files + 1))
                consecutive_failures=0
            else
                echo "Failed to process $file"
                echo "$file" >> {params.failed_files_log}
                mv "$file" FAILED_CONFIG/
                failed_files=$((failed_files + 1))
                consecutive_failures=$((consecutive_failures + 1))
                
                if [ $consecutive_failures -ge $max_consecutive_failures ]; then
                    echo "Error: $max_consecutive_failures consecutive failures reached." >&2
                    exit 1
                fi
            fi
        done
        
        echo "Total files: $total_files"
        echo "Processed files: $processed_files"
        echo "Failed files: $failed_files"
        
        if [ $failed_files -eq 0 ]; then
            touch {output}
        else
            exit 1
        fi
        """

rule create_logdir:
    output:
        directory(config["slurm_logdir"])
    shell:
        "mkdir -p {output}"
